{"name": "test_do_SignUp", "status": "broken", "statusDetails": {"message": "TypeError: unhashable type: 'MarkDecorator'", "trace": "self = <allure_pytest.listener.AllureListener object at 0x000002314F434588>, item = <Function test_do_SignUp>\n\n    @pytest.hookimpl(hookwrapper=True)\n    def pytest_runtest_teardown(self, item):\n        yield\n        uuid = self._cache.get(item.nodeid)\n        test_result = self.allure_logger.get_test(uuid)\n>       test_result.labels.extend([Label(name=name, value=value) for name, value in allure_labels(item)])\n\nvenv\\lib\\site-packages\\allure_pytest\\listener.py:115: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nitem = <Function test_do_SignUp>\n\n    def allure_labels(item):\n        unique_labels = dict()\n        labels = set()\n        for mark in item.iter_markers(name=ALLURE_LABEL_MARK):\n            label_type = mark.kwargs[\"label_type\"]\n            if label_type in ALLURE_UNIQUE_LABELS:\n                if label_type not in unique_labels.keys():\n                    unique_labels[label_type] = mark.args[0]\n            else:\n                for arg in mark.args:\n>                   labels.add((label_type, arg))\nE                   TypeError: unhashable type: 'MarkDecorator'\n\nvenv\\lib\\site-packages\\allure_pytest\\utils.py:70: TypeError"}, "description": "first test", "start": 1620216426679, "stop": 1620216427299, "uuid": "f1472cdd-3ccf-4561-a21b-dad4c85cdd64", "historyId": "1ce13b86e80f142e28c5f71e0f224499", "testCaseId": "9109b933279a029d5228767b960c7023", "fullName": "Tests.test_SignUpTestCase.Test_doSignUpTest#test_do_SignUp"}